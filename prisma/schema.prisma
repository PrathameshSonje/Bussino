// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  email    String   @unique
  name     String?
  password String?
  phone    String?   @unique
  DOB      DateTime?
  wallet   Wallet?
  vault    Vault?
  accounts Account[]
}

model Account {
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

enum Currency {
  USD
  EUR
  JPY
  GBP
  AUD
  CAD
  CHF
  CNY
  SEK
  NZD
  MXN
  SGD
  HKD
  NOK
  KRW
  TRY
  RUB
  INR
  BRL
  ZAR
  BTC
  ETH
  BNB
  ADA
  SOL
  DOT
  DOGE
  XRP
  LTC
  LINK
  XLM
  UNI
  USDC
  USDT
  SHIB
  AVAX
  LUNA
  ALGO
  VET
  TRX
}

model Wallet {
  id        Int      @id @default(autoincrement())
  owner     User     @relation(fields: [ownerId], references: [id])
  value     Decimal  @db.Decimal(20, 8)
  updatedAt DateTime @updatedAt
  ownerId   Int      @unique
  vault     Vault    @relation(fields: [vaultId], references: [id])
  vaultId   Int      @unique
}

model Vault {
  id        Int      @id @default(autoincrement())
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int      @unique
  value     Decimal  @db.Decimal(20, 8)
  updatedAt DateTime @updatedAt
  currency  Currency @default(USD)
  wallet    Wallet?
}
